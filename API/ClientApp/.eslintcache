[{"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx":"1","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts":"2","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\store.ts":"3","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx":"4","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\ActivityStore.ts":"5","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx":"6","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\Loading.tsx":"7","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"8","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts":"9","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"10","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx":"11","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx":"12","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\home\\HomePage.tsx":"13"},{"size":751,"mtime":1634357986277,"results":"14","hashOfConfig":"15"},{"size":5436,"mtime":1634354690284,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1634354690274,"results":"17","hashOfConfig":"15"},{"size":1369,"mtime":1634361569838,"results":"18","hashOfConfig":"15"},{"size":4105,"mtime":1634360342496,"results":"19","hashOfConfig":"15"},{"size":872,"mtime":1634359803612,"results":"20","hashOfConfig":"15"},{"size":339,"mtime":1634354690268,"results":"21","hashOfConfig":"15"},{"size":1285,"mtime":1634360448002,"results":"22","hashOfConfig":"15"},{"size":1370,"mtime":1634354690265,"results":"23","hashOfConfig":"15"},{"size":2271,"mtime":1634359771564,"results":"24","hashOfConfig":"15"},{"size":1770,"mtime":1634360782941,"results":"25","hashOfConfig":"15"},{"size":2373,"mtime":1634361253484,"results":"26","hashOfConfig":"15"},{"size":351,"mtime":1634358459667,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19pfiu9",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"32"},"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts",[],["62","63"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\store.ts",["64"],"﻿import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n    return useContext(StoreContext);\r\n}","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx",["65","66","67"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\ActivityStore.ts",["68"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx",["69","70","71"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\Loading.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["72"],"﻿import React, { useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { ActivityList } from './ActivityList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Loading } from '../../../app/layout/Loading';\r\n\r\n\r\nexport const ActivityDashboard = observer(() => {\r\n\r\n    const { activityStore } = useStore();\r\n   \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            activityStore.loadActivities();\r\n        }\r\n        fetchData();\r\n    }, [activityStore])\r\n\r\n\r\n\r\n    if (activityStore.loadingInitial) return <Loading content='Loading app' />\r\n\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                <ActivityList />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width='6'>\r\n               <h3>Activity Filter</h3>\r\n            </Grid.Column>\r\n\r\n            {/*<Grid.Column width='6'>*/}\r\n            {/*    {selectedActivity &&*/}\r\n            {/*        <>*/}\r\n            {/*            <ActivityDetail />*/}\r\n            {/*        </>*/}\r\n            {/*    }*/}\r\n            {/*    {editMode &&*/}\r\n            {/*        <ActivityForm />*/}\r\n            {/*    }*/}\r\n            {/*</Grid.Column>*/}\r\n\r\n        </Grid>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts",["73"],"﻿import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/Activity';\r\n\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\n\r\naxios.defaults.baseURL = '/api'\r\n\r\n\r\naxios.interceptors.response.use(async response => {\r\n    try {\r\n        await sleep(1000);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return await Promise.reject(error);\r\n    }\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<IActivity[]>('/activities'),\r\n    details: (id: string) => requests.get<IActivity>(`/activities/${id}`),\r\n    create: (activity: IActivity) => axios.post<void>('/activities', activity),\r\n    update: (activity: IActivity) => axios.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => axios.delete<void>(`/activities/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities\r\n}\r\n\r\nexport default agent;","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["74","75"],"﻿import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/Activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\nexport const ActivityList = observer(() => {\r\n    const [target, setTarget] = useState('');\r\n    const { activityStore } = useStore();\r\n    const { activitiesByDate : activities, deleteActivity, loading :submitting } = activityStore;\r\n\r\n    const handleActivityDelete = (e: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        setTarget(e.currentTarget.name);\r\n        deleteActivity(id);\r\n    }\r\n    const DisplayList = () => {\r\n        return (\r\n            <>\r\n                {activities.map(activity =>\r\n\r\n                    <Item key={activity.id}>\r\n                        <Item.Content>\r\n                            <Item.Header as='a'>{activity.title}</Item.Header>\r\n                            <Item.Meta>{activity.date}</Item.Meta>\r\n                            <Item.Description>\r\n                                {activity.description}\r\n                            </Item.Description>\r\n                            <Item.Extra>\r\n                                <Label basic content={activity.category}></Label>\r\n                                <Button floated='right' color='red'\r\n                                    loading={submitting && target === activity.id}\r\n                                    name={activity.id}\r\n                                    onClick={(e) => handleActivityDelete(e, activity.id)}\r\n                                >Delete</Button>\r\n                                <Button floated='right'\r\n                                    color='blue' as={Link} to={`/activities/${activity.id}`}\r\n                                >View</Button>\r\n                                \r\n                            </Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Segment>\r\n            <Item.Group divided>\r\n                <DisplayList />\r\n            </Item.Group>\r\n        </Segment>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx",["76","77"],"﻿import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Card, Icon, Image } from 'semantic-ui-react'\r\nimport { Loading } from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\nexport const ActivityDetail = observer(() => {\r\n\r\n    const { activityStore } = useStore();\r\n    const { selectedActivity: activity, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n    }, [id, loadActivity]);\r\n\r\n\r\n    if (loadingInitial || !activity) return <Loading />;\r\n\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Image src={`/assets/categoryImages/${activity.category}.jpg`} />\r\n            <Card.Content>\r\n                <Card.Header>{activity.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{activity.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths='2'>\r\n                    {/*<Button onClick={() => openForm(activity.id)} basic color='blue' content='Edit' />\r\n                    <Button onClick={() => cancelSelectedActivity()} basic color='grey' content='Cancel' />*/}\r\n                    <Button as={Link} to={`/manage/${activity.id}`} basic color='blue' content='Edit' />\r\n                    <Button as={Link} to='/activities' basic color='grey' content='Cancel' />\r\n\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx",["78","79","80","81"],"﻿import { observer } from 'mobx-react-lite';\r\nimport React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { Loading } from '../../../app/layout/Loading';\r\nimport { IActivity } from '../../../app/models/Activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\nexport const ActivityForm = observer(() => {\r\n    const { activityStore } = useStore();\r\n    const { loadActivity, createActivity, updateActivity, loading, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n    const [activity, setActivity] = useState({\r\n        id: '',\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        date: '',\r\n        city: '',\r\n        venue: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id).then(activity => setActivity(activity!))\r\n    }, [id, loadActivity]);\r\n\r\n\r\n    const handleSubmit = () => {\r\n        activity.id ? updateActivity(activity) : createActivity(activity);\r\n    }\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = event.target;\r\n        setActivity({ ...activity, [name]: value })\r\n    }\r\n\r\n    \r\n    return (\r\n        <Segment clearing>\r\n            <Form onSubmit={handleSubmit} autoComplete='off'>\r\n                <Form.Input placeholder='Title' value={activity.title} name='title' onChange={handleInputChange} />\r\n                <Form.TextArea placeholder='Description' value={activity.description} onChange={handleInputChange} name='description' />\r\n                <Form.Input placeholder='Category' value={activity.category} name='category' onChange={handleInputChange} />\r\n                <Form.Input type='date' placeholder='Date' value={activity.date} name='date' onChange={handleInputChange} />\r\n                <Form.Input placeholder='City' value={activity.city} name='city' onChange={handleInputChange} />\r\n                <Form.Input placeholder='Venue' value={activity.venue} name='venue' onChange={handleInputChange} />\r\n                <Button loading={loading} floated='right' positive type='submit' content='Submit' />\r\n\r\n                <Button floated='right' type='button' content='Cancel' />\r\n            </Form>\r\n        </Segment>\r\n    )\r\n}\r\n)","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\home\\HomePage.tsx",["82"],"﻿import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nexport const HomePage = () => {\r\n    return (\r\n        <Container style={{ marginTop: '7em' }}>\r\n            <h1>Home page</h1>\r\n            <h3>Go to <Link to='/activities'>Activities</Link></h3>\r\n        </Container>\r\n    )\r\n}",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"91"},{"ruleId":"92","severity":1,"message":"93","line":2,"column":10,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"96","line":2,"column":29,"nodeType":"94","messageId":"95","endLine":2,"endColumn":35},{"ruleId":"92","severity":1,"message":"97","line":2,"column":37,"nodeType":"94","messageId":"95","endLine":2,"endColumn":41},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"98"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"99"},{"ruleId":"92","severity":1,"message":"100","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":26},{"ruleId":"92","severity":1,"message":"101","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"102"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"103"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"104"},{"ruleId":"92","severity":1,"message":"105","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"106"},{"ruleId":"92","severity":1,"message":"107","line":4,"column":24,"nodeType":"94","messageId":"95","endLine":4,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"108"},{"ruleId":"92","severity":1,"message":"109","line":5,"column":10,"nodeType":"94","messageId":"95","endLine":5,"endColumn":17},{"ruleId":"92","severity":1,"message":"105","line":6,"column":10,"nodeType":"94","messageId":"95","endLine":6,"endColumn":19},{"ruleId":"92","severity":1,"message":"110","line":12,"column":68,"nodeType":"94","messageId":"95","endLine":12,"endColumn":82},{"ruleId":"87","severity":1,"message":"88","line":1,"column":1,"nodeType":"89","messageId":"90","fix":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"114","text":"115"},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'List' is defined but never used.",{"range":"116","text":"115"},{"range":"117","text":"115"},"'Component' is defined but never used.","'useStore' is defined but never used.",{"range":"118","text":"115"},{"range":"119","text":"115"},{"range":"120","text":"115"},"'IActivity' is defined but never used.",{"range":"121","text":"115"},"'Icon' is defined but never used.",{"range":"122","text":"115"},"'Loading' is defined but never used.","'loadingInitial' is assigned a value but never used.",{"range":"123","text":"115"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]