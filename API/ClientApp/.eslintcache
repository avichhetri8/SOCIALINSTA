[{"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx":"1","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts":"2","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\store.ts":"3","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx":"4","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\ActivityStore.ts":"5","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx":"6","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\Loading.tsx":"7","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"8","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts":"9","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"10","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx":"11","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx":"12","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\home\\HomePage.tsx":"13","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx":"14","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailChat.tsx":"15","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailHeader.tsx":"16","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailInfo.tsx":"17","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailSidebar.tsx":"18","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityFilters.tsx":"19","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\TestError.tsx":"20","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\NotFound.tsx":"21","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\ValidationErrors.tsx":"22","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\commonStore.ts":"23","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\ServerError.tsx":"24","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\common\\form\\MyTextInput.tsx":"25"},{"size":1062,"mtime":1634448547884,"results":"26","hashOfConfig":"27"},{"size":5436,"mtime":1634354690284,"results":"28","hashOfConfig":"27"},{"size":473,"mtime":1634450314074,"results":"29","hashOfConfig":"27"},{"size":2018,"mtime":1634468473092,"results":"30","hashOfConfig":"27"},{"size":4641,"mtime":1634472673696,"results":"31","hashOfConfig":"27"},{"size":972,"mtime":1634446745255,"results":"32","hashOfConfig":"27"},{"size":339,"mtime":1634354690268,"results":"33","hashOfConfig":"27"},{"size":1362,"mtime":1634393917027,"results":"34","hashOfConfig":"27"},{"size":2395,"mtime":1634453350683,"results":"35","hashOfConfig":"27"},{"size":1027,"mtime":1634377337412,"results":"36","hashOfConfig":"27"},{"size":1354,"mtime":1634393038428,"results":"37","hashOfConfig":"27"},{"size":3668,"mtime":1634472726497,"results":"38","hashOfConfig":"27"},{"size":804,"mtime":1634394428329,"results":"39","hashOfConfig":"27"},{"size":2305,"mtime":1634378036463,"results":"40","hashOfConfig":"27"},{"size":2416,"mtime":1634393433244,"results":"41","hashOfConfig":"27"},{"size":2001,"mtime":1634469923855,"results":"42","hashOfConfig":"27"},{"size":1702,"mtime":1634392865272,"results":"43","hashOfConfig":"27"},{"size":2433,"mtime":1634392992687,"results":"44","hashOfConfig":"27"},{"size":606,"mtime":1634393827336,"results":"45","hashOfConfig":"27"},{"size":1913,"mtime":1634450008758,"results":"46","hashOfConfig":"27"},{"size":608,"mtime":1634447030461,"results":"47","hashOfConfig":"27"},{"size":504,"mtime":1634450020274,"results":"48","hashOfConfig":"27"},{"size":328,"mtime":1634450710851,"results":"49","hashOfConfig":"27"},{"size":767,"mtime":1634450154215,"results":"50","hashOfConfig":"27"},{"size":625,"mtime":1634472504213,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"19pfiu9",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx",[],["119","120"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\store.ts",["121"],"ï»¿import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\nimport CommonStore from \"./commonStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n    return useContext(StoreContext);\r\n}","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx",["122","123","124"],"import React from 'react';\r\nimport { Button, Container, Header, List } from 'semantic-ui-react';\r\nimport { NavBar } from './NavBar';\r\nimport { ActivityDashboard } from '../../feature/activities/dashboard/ActivityDashboard';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Route, Switch, useLocation } from 'react-router-dom';\r\nimport { HomePage } from '../../feature/home/HomePage';\r\nimport { ActivityForm } from '../../feature/activities/form/ActivityForm';\r\nimport { ActivityDetail } from '../../feature/activities/details/ActivityDetail';\r\nimport { TestError } from '../../feature/error/TestError';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { NotFound } from '../../feature/error/NotFound';\r\nimport { ServerError } from '../../feature/error/ServerError';\r\n\r\n\r\nconst App = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer position='bottom-right' hideProgressBar />\r\n            <Route exact path='/' component={HomePage} />\r\n            <Route\r\n                path={'/(.+)'}\r\n                render={() => (\r\n\r\n                    <>\r\n                        <NavBar />\r\n                        <Container style={{ marginTop: '5em' }}>\r\n                            <Switch>\r\n                                <Route exact path=\"/activities/\" component={ActivityDashboard} />\r\n                                <Route path=\"/activities/:id\" component={ActivityDetail} />\r\n                                <Route key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\r\n                                <Route path=\"/errors\" component={TestError} />\r\n                                <Route path=\"/not-found\" component={NotFound} />\r\n                                <Route path=\"/server-error\" component={ServerError} />\r\n                            </Switch>\r\n                        </Container>\r\n                    </>\r\n                )}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default observer(App);","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\ActivityStore.ts",["125"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx",["126","127","128"],"ï»¿import { observer } from 'mobx-react-lite';\r\nimport React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Button, Container, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nexport const NavBar = observer(() => {\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item header as={NavLink} to=\"/\" exact>\r\n                    <img src='assets/logo.png' alt=\"logo\" />\r\n\r\n                    SocialInsta \r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to=\"/activities\" name='Activities'>\r\n                </Menu.Item>\r\n                <Menu.Item >\r\n                    <Button positive content='Create Activity' as={NavLink} to=\"/createactivity\" />\r\n                </Menu.Item>\r\n\r\n                <Menu.Item as={NavLink} to=\"/errors\" name='Error'>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\Loading.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["129"],"ï»¿import React, { useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { ActivityList } from './ActivityList';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Loading } from '../../../app/layout/Loading';\r\nimport { ActivityFilters } from './ActivityFilters';\r\n\r\n\r\nexport const ActivityDashboard = observer(() => {\r\n\r\n    const { activityStore } = useStore();\r\n    const { loadActivities, activityRegistry } = activityStore;\r\n\r\n    useEffect(() => {\r\n        if (activityRegistry.size <= 1) loadActivities();\r\n    }, [activityRegistry.size, loadActivities])\r\n\r\n    \r\n    if (activityStore.loadingInitial) return <Loading content='Loading app' />\r\n\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                <ActivityList />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width='6'>\r\n                <ActivityFilters/>\r\n            </Grid.Column>\r\n\r\n            {/*<Grid.Column width='6'>*/}\r\n            {/*    {selectedActivity &&*/}\r\n            {/*        <>*/}\r\n            {/*            <ActivityDetail />*/}\r\n            {/*        </>*/}\r\n            {/*    }*/}\r\n            {/*    {editMode &&*/}\r\n            {/*        <ActivityForm />*/}\r\n            {/*    }*/}\r\n            {/*</Grid.Column>*/}\r\n\r\n        </Grid>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts",["130"],"ï»¿import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { IActivity } from '../models/Activity';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = '/api';\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep(1000);\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n                history.push('/not-found');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            } else {\r\n                toast.error(data);\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');\r\n            break;\r\n        case 404:\r\n            history.push('/not-found');\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push('/server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<IActivity[]>('/activities'),\r\n    details: (id: string) => requests.get<IActivity>(`/activities/${id}`),\r\n    create: (activity: IActivity) => axios.post<void>('/activities', activity),\r\n    update: (activity: IActivity) => axios.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => axios.delete<void>(`/activities/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities\r\n}\r\n\r\nexport default agent;","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["131","132","133"],"ï»¿import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment } from 'react';\r\nimport { Header, Item, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { ActivityListItem } from './ActivityListItem';\r\n\r\n\r\nexport const ActivityList = observer(() => {\r\n    const { activityStore } = useStore();\r\n    const { groupedActivities: activities } = activityStore;\r\n\r\n\r\n    const DisplayList = () => {\r\n        return (\r\n            <>\r\n                {activities.map(([group, activities]) => (\r\n                    <Fragment key={group}>\r\n                        <Header sub color='teal'>\r\n                            {group}\r\n                        </Header>\r\n                        {activities.map(activity => (\r\n                            <ActivityListItem key={activity.id} activity={activity} />\r\n                        ))}\r\n                    </Fragment>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <DisplayList />\r\n\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx",["134","135","136","137","138","139"],"ï»¿import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Card, Grid, Icon, Image } from 'semantic-ui-react'\r\nimport { Loading } from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport { ActivityDetailChat } from './ActivityDetailChat';\r\nimport { ActivityDetailHeader } from './ActivityDetailHeader';\r\nimport { ActivityDetailInfo } from './ActivityDetailInfo';\r\nimport { ActivityDetailSidebar } from './ActivityDetailSidebar';\r\n\r\n\r\nexport const ActivityDetail = observer(() => {\r\n\r\n    const { activityStore } = useStore();\r\n    const { selectedActivity: activity, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n    }, [id, loadActivity]);\r\n\r\n\r\n    if (loadingInitial || !activity) return <Loading />;\r\n\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityDetailHeader activity={activity} />\r\n                <ActivityDetailInfo activity={activity}/>\r\n                <ActivityDetailChat />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <ActivityDetailSidebar />\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx",["140","141","142","143","144","145","146"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\home\\HomePage.tsx",["147"],"ï»¿import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Header, Segment, Image, Button } from 'semantic-ui-react';\r\n\r\nexport const HomePage = () => {\r\n    return (\r\n        <Segment inverted textAlign='center' vertical className='masthead'>\r\n            <Container text>\r\n                <Header as='h1' inverted>\r\n                    <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n                    Reactivities\r\n                </Header>\r\n                <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                <Button as={Link} to='/activities' size='huge' inverted>\r\n                    Take me to the Activities!\r\n                </Button>\r\n            </Container>\r\n        </Segment>\r\n    )\r\n}","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityListItem.tsx",["148","149","150","151","152","153"],"ï»¿import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/Activity';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\ninterface Props {\r\n    activity: IActivity;\r\n}\r\n\r\nexport const ActivityListItem = observer(({ activity }: Props) => {\r\n    const [target, setTarget] = useState('');\r\n    const { activityStore } = useStore();\r\n    const { activitiesByDate: activities, deleteActivity, loading: submitting } = activityStore;\r\n\r\n    const handleActivityDelete = (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\r\n        setTarget(event.currentTarget.name);\r\n        deleteActivity(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Segment.Group>\r\n                <Segment>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Image size='tiny' circular src='/assets/user.png' />\r\n                            <Item.Content>\r\n                                <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                                    {activity.title}\r\n                                </Item.Header>\r\n                                <Item.Description>Hosted by Bob</Item.Description>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n                <Segment>\r\n                    <span>\r\n                        <Icon name='clock' /> {activity.date}\r\n                        <Icon name='marker' /> {activity.venue}\r\n                    </span>\r\n                </Segment>\r\n                <Segment secondary>\r\n                    Attendees go here\r\n                </Segment>\r\n                <Segment clearing>\r\n                    <span>{activity.description}</span>\r\n                    <Button\r\n                        as={Link}\r\n                        to={`/activities/${activity.id}`}\r\n                        color='teal'\r\n                        floated='right'\r\n                        content='View'\r\n                    />\r\n                </Segment>\r\n            </Segment.Group>\r\n        </>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailChat.tsx",["154"],"ï»¿import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Segment, Header, Comment, Form, Button } from 'semantic-ui-react'\r\n\r\n\r\nexport const ActivityDetailChat = observer(() => {\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                attached='top'\r\n                inverted\r\n                color='teal'\r\n                style={{ border: 'none' }}\r\n            >\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Comment.Group>\r\n                    <Comment>\r\n                        <Comment.Avatar src='/assets/user.png' />\r\n                        <Comment.Content>\r\n                            <Comment.Author as='a'>Matt</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>Today at 5:42PM</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text>How artistic!</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n\r\n                    <Comment>\r\n                        <Comment.Avatar src='/assets/user.png' />\r\n                        <Comment.Content>\r\n                            <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n                            <Comment.Metadata>\r\n                                <div>5 days ago</div>\r\n                            </Comment.Metadata>\r\n                            <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n                            <Comment.Actions>\r\n                                <Comment.Action>Reply</Comment.Action>\r\n                            </Comment.Actions>\r\n                        </Comment.Content>\r\n                    </Comment>\r\n\r\n                    <Form reply>\r\n                        <Form.TextArea />\r\n                        <Button\r\n                            content='Add Reply'\r\n                            labelPosition='left'\r\n                            icon='edit'\r\n                            primary\r\n                        />\r\n                    </Form>\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailHeader.tsx",["155"],"ï»¿import { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/Activity';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: IActivity\r\n}\r\n\r\nexport const ActivityDetailHeader = observer(({ activity }: Props) => {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{ color: 'white' }}\r\n                                />\r\n                                <p>{activity.date}</p>\r\n                                <p>\r\n                                    Hosted by <strong>Bob</strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                <Button color='teal'>Join Activity</Button>\r\n                <Button>Cancel attendance</Button>\r\n                <Button color='orange' floated='right' as={Link} to={`/manage/${activity.id}`}>\r\n                    Manage Event\r\n                </Button>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailInfo.tsx",["156"],"ï»¿import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Grid, Icon, Segment } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/Activity'\r\n\r\n\r\ninterface Props {\r\n    activity: IActivity\r\n}\r\n\r\nexport const ActivityDetailInfo = observer(({ activity }: Props) => {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <span>\r\n                            {activity.date}\r\n                        </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal' />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetailSidebar.tsx",["157"],"ï»¿import React from 'react';\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const ActivityDetailSidebar = observer(() => {\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n                3 People Going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    <Item style={{ position: 'relative' }}>\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>\r\n                        <Image size='tiny' src={'/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`#`}>Bob</Link>\r\n                            </Item.Header>\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n\r\n                    <Item style={{ position: 'relative' }}>\r\n                        <Image size='tiny' src={'/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`#`}>Tom</Link>\r\n                            </Item.Header>\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n\r\n                    <Item style={{ position: 'relative' }}>\r\n                        <Image size='tiny' src={'/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`#`}>Sally</Link>\r\n                            </Item.Header>\r\n                        </Item.Content>\r\n                    </Item>\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityFilters.tsx",["158"],"ï»¿import React from 'react';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport Calendar from 'react-calendar';\r\n\r\nexport const ActivityFilters = () => {\r\n    return (\r\n        <>\r\n            <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\r\n                <Header icon='filter' attached color='teal' content='Filters' />\r\n                <Menu.Item content='All Activites' />\r\n                <Menu.Item content=\"I'm going\" />\r\n                <Menu.Item content=\"I'm hosting\" />\r\n            </Menu>\r\n            <Header />\r\n            <Calendar />\r\n        </>\r\n    )\r\n}","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\TestError.tsx",["159"],"ï»¿import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport { ValidationErrors } from './ValidationErrors';\r\n\r\nexport const TestError = () => {\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    function handleNotFound() {\r\n        axios.get('buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get('buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get('buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get('buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get('activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post('activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n                <ValidationErrors errors={errors}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\NotFound.tsx",["160"],"ï»¿import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react';\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\ValidationErrors.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\commonStore.ts",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\error\\ServerError.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\common\\form\\MyTextInput.tsx",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":16},{"ruleId":"170","severity":1,"message":"174","line":2,"column":29,"nodeType":"172","messageId":"173","endLine":2,"endColumn":35},{"ruleId":"170","severity":1,"message":"175","line":2,"column":37,"nodeType":"172","messageId":"173","endLine":2,"endColumn":41},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"176"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"177"},{"ruleId":"170","severity":1,"message":"178","line":2,"column":17,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"179","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"180"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"181"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"182"},{"ruleId":"170","severity":1,"message":"183","line":3,"column":18,"nodeType":"172","messageId":"173","endLine":3,"endColumn":22},{"ruleId":"170","severity":1,"message":"184","line":3,"column":24,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"185"},{"ruleId":"170","severity":1,"message":"186","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":16},{"ruleId":"170","severity":1,"message":"187","line":4,"column":18,"nodeType":"172","messageId":"173","endLine":4,"endColumn":22},{"ruleId":"170","severity":1,"message":"188","line":4,"column":30,"nodeType":"172","messageId":"173","endLine":4,"endColumn":34},{"ruleId":"170","severity":1,"message":"189","line":4,"column":36,"nodeType":"172","messageId":"173","endLine":4,"endColumn":41},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"190"},{"ruleId":"170","severity":1,"message":"191","line":2,"column":17,"nodeType":"172","messageId":"173","endLine":2,"endColumn":28},{"ruleId":"170","severity":1,"message":"192","line":6,"column":16,"nodeType":"172","messageId":"173","endLine":6,"endColumn":20},{"ruleId":"170","severity":1,"message":"193","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":21},{"ruleId":"170","severity":1,"message":"194","line":13,"column":11,"nodeType":"172","messageId":"173","endLine":13,"endColumn":18},{"ruleId":"170","severity":1,"message":"195","line":15,"column":27,"nodeType":"172","messageId":"173","endLine":15,"endColumn":41},{"ruleId":"170","severity":1,"message":"196","line":15,"column":43,"nodeType":"172","messageId":"173","endLine":15,"endColumn":57},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"197"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"198"},{"ruleId":"170","severity":1,"message":"199","line":4,"column":30,"nodeType":"172","messageId":"173","endLine":4,"endColumn":35},{"ruleId":"170","severity":1,"message":"200","line":13,"column":12,"nodeType":"172","messageId":"173","endLine":13,"endColumn":18},{"ruleId":"170","severity":1,"message":"201","line":15,"column":31,"nodeType":"172","messageId":"173","endLine":15,"endColumn":41},{"ruleId":"170","severity":1,"message":"202","line":15,"column":68,"nodeType":"172","messageId":"173","endLine":15,"endColumn":78},{"ruleId":"170","severity":1,"message":"203","line":17,"column":11,"nodeType":"172","messageId":"173","endLine":17,"endColumn":31},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"204"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"205"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"206"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"207"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"208"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"209"},{"ruleId":"165","severity":1,"message":"166","line":1,"column":1,"nodeType":"167","messageId":"168","fix":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"213","text":"214"},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'List' is defined but never used.",{"range":"215","text":"214"},{"range":"216","text":"214"},"'Component' is defined but never used.","'useStore' is defined but never used.",{"range":"217","text":"214"},{"range":"218","text":"214"},{"range":"219","text":"214"},"'Item' is defined but never used.","'Segment' is defined but never used.",{"range":"220","text":"214"},"'Link' is defined but never used.","'Card' is defined but never used.","'Icon' is defined but never used.","'Image' is defined but never used.",{"range":"221","text":"214"},"'ChangeEvent' is defined but never used.","'uuid' is defined but never used.","'MyTextInput' is defined but never used.","'history' is assigned a value but never used.","'createActivity' is assigned a value but never used.","'updateActivity' is assigned a value but never used.",{"range":"222","text":"214"},{"range":"223","text":"214"},"'Label' is defined but never used.","'target' is assigned a value but never used.","'activities' is assigned a value but never used.","'submitting' is assigned a value but never used.","'handleActivityDelete' is assigned a value but never used.",{"range":"224","text":"214"},{"range":"225","text":"214"},{"range":"226","text":"214"},{"range":"227","text":"214"},{"range":"228","text":"214"},{"range":"229","text":"214"},{"range":"230","text":"214"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]