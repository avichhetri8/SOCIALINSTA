[{"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx":"1","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts":"2","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\store.ts":"3","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx":"4","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\ActivityStore.ts":"5","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx":"6","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\Loading.tsx":"7","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"8","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts":"9","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"10","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx":"11","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx":"12","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\home\\HomePage.tsx":"13"},{"size":751,"mtime":1634357986277,"results":"14","hashOfConfig":"15"},{"size":5436,"mtime":1634354690284,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1634354690274,"results":"17","hashOfConfig":"15"},{"size":1369,"mtime":1634361569838,"results":"18","hashOfConfig":"15"},{"size":4035,"mtime":1634361884020,"results":"19","hashOfConfig":"15"},{"size":872,"mtime":1634359803612,"results":"20","hashOfConfig":"15"},{"size":339,"mtime":1634354690268,"results":"21","hashOfConfig":"15"},{"size":1313,"mtime":1634362157346,"results":"22","hashOfConfig":"15"},{"size":1370,"mtime":1634354690265,"results":"23","hashOfConfig":"15"},{"size":2279,"mtime":1634362529445,"results":"24","hashOfConfig":"15"},{"size":1770,"mtime":1634360782941,"results":"25","hashOfConfig":"15"},{"size":2809,"mtime":1634362348480,"results":"26","hashOfConfig":"15"},{"size":351,"mtime":1634358459667,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19pfiu9",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"32"},"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts",[],["59","60"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\store.ts",["61"],"﻿import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./ActivityStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport const useStore = () => {\r\n    return useContext(StoreContext);\r\n}","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx",["62","63","64"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\stores\\ActivityStore.ts",["65"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx",["66","67","68"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\Loading.tsx",[],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["69"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts",["70"],"﻿import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/Activity';\r\n\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay)\r\n    })\r\n}\r\n\r\n\r\naxios.defaults.baseURL = '/api'\r\n\r\n\r\naxios.interceptors.response.use(async response => {\r\n    try {\r\n        await sleep(1000);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return await Promise.reject(error);\r\n    }\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: () => requests.get<IActivity[]>('/activities'),\r\n    details: (id: string) => requests.get<IActivity>(`/activities/${id}`),\r\n    create: (activity: IActivity) => axios.post<void>('/activities', activity),\r\n    update: (activity: IActivity) => axios.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => axios.delete<void>(`/activities/${id}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities\r\n}\r\n\r\nexport default agent;","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["71","72"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx",["73","74"],"﻿import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { Button, Card, Icon, Image } from 'semantic-ui-react'\r\nimport { Loading } from '../../../app/layout/Loading';\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\n\r\nexport const ActivityDetail = observer(() => {\r\n\r\n    const { activityStore } = useStore();\r\n    const { selectedActivity: activity, loadActivity, loadingInitial } = activityStore;\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    useEffect(() => {\r\n        if (id) loadActivity(id);\r\n    }, [id, loadActivity]);\r\n\r\n\r\n    if (loadingInitial || !activity) return <Loading />;\r\n\r\n\r\n    return (\r\n        <Card fluid>\r\n            <Image src={`/assets/categoryImages/${activity.category}.jpg`} />\r\n            <Card.Content>\r\n                <Card.Header>{activity.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{activity.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths='2'>\r\n                    {/*<Button onClick={() => openForm(activity.id)} basic color='blue' content='Edit' />\r\n                    <Button onClick={() => cancelSelectedActivity()} basic color='grey' content='Cancel' />*/}\r\n                    <Button as={Link} to={`/manage/${activity.id}`} basic color='blue' content='Edit' />\r\n                    <Button as={Link} to='/activities' basic color='grey' content='Cancel' />\r\n\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n})","E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx",["75"],"E:\\dotnet\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\home\\HomePage.tsx",["76"],"﻿import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container } from 'semantic-ui-react';\r\n\r\nexport const HomePage = () => {\r\n    return (\r\n        <Container style={{ marginTop: '7em' }}>\r\n            <h1>Home page</h1>\r\n            <h3>Go to <Link to='/activities'>Activities</Link></h3>\r\n        </Container>\r\n    )\r\n}",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":2,"column":29,"nodeType":"88","messageId":"89","endLine":2,"endColumn":35},{"ruleId":"86","severity":1,"message":"91","line":2,"column":37,"nodeType":"88","messageId":"89","endLine":2,"endColumn":41},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"92"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"93"},{"ruleId":"86","severity":1,"message":"94","line":2,"column":17,"nodeType":"88","messageId":"89","endLine":2,"endColumn":26},{"ruleId":"86","severity":1,"message":"95","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"96"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"97"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"98"},{"ruleId":"86","severity":1,"message":"99","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":19},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"100"},{"ruleId":"86","severity":1,"message":"101","line":4,"column":24,"nodeType":"88","messageId":"89","endLine":4,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"102"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":1,"nodeType":"83","messageId":"84","fix":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"106","text":"107"},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'List' is defined but never used.",{"range":"108","text":"107"},{"range":"109","text":"107"},"'Component' is defined but never used.","'useStore' is defined but never used.",{"range":"110","text":"107"},{"range":"111","text":"107"},{"range":"112","text":"107"},"'IActivity' is defined but never used.",{"range":"113","text":"107"},"'Icon' is defined but never used.",{"range":"114","text":"107"},{"range":"115","text":"107"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]