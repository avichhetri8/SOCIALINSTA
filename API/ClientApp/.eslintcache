[{"C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx":"1","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts":"2","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\models\\Activity.ts":"4","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx":"5","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx":"6","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx":"7","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx":"8","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx":"9","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts":"10"},{"size":495,"mtime":1634226332091,"results":"11","hashOfConfig":"12"},{"size":5290,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":2752,"mtime":1634287592769,"results":"14","hashOfConfig":"12"},{"size":177,"mtime":1634226913056,"results":"15","hashOfConfig":"12"},{"size":732,"mtime":1634281624172,"results":"16","hashOfConfig":"12"},{"size":1666,"mtime":1634286197772,"results":"17","hashOfConfig":"12"},{"size":1632,"mtime":1634286331506,"results":"18","hashOfConfig":"12"},{"size":1216,"mtime":1634282826695,"results":"19","hashOfConfig":"12"},{"size":2023,"mtime":1634282975388,"results":"20","hashOfConfig":"12"},{"size":758,"mtime":1634287627113,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"vbac85",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\index.tsx",[],["48","49"],"C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\serviceWorker.ts",[],"C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\App.tsx",["50","51"],"C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\models\\Activity.ts",["52"],"C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\layout\\NavBar.tsx",["53","54"],"﻿import React, { Component } from 'react'\r\nimport { Button, Container, Menu } from 'semantic-ui-react';\r\n\r\n\r\ninterface Props {\r\n    openForm: () => void;\r\n}\r\n\r\nexport const NavBar = ({ openForm }: Props) => {\r\n\r\n    return (\r\n        <Menu inverted fixed='top'>\r\n            <Container>\r\n                <Menu.Item header>\r\n                    <img src='assets/logo.png' alt=\"logo\" />\r\n\r\n                    SocialInsta \r\n                </Menu.Item>\r\n                <Menu.Item name='Activities'>\r\n                </Menu.Item>\r\n                <Menu.Item >\r\n                    <Button positive content='Create Activity' onClick={openForm} />\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n\r\n}\r\n","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityDashboard.tsx",["55","56"],"﻿import React from 'react';\r\nimport { Grid, List } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/Activity';\r\nimport { ActivityDetail } from '../details/ActivityDetail';\r\nimport { ActivityForm } from '../form/ActivityForm';\r\nimport { ActivityList } from './ActivityList';\r\n\r\ninterface Props {\r\n    activities: IActivity[];\r\n    selectedActivity: IActivity | undefined;\r\n    selectActivity: (id: string) => void;\r\n    cancelSelectActivity: () => void;\r\n    editMode: boolean,\r\n    openForm: (id: string) => void;\r\n    closeForm: () => void;\r\n    createOrEdit: (activity: IActivity) => void;\r\n    deleteActivity: (id: string) => void;\r\n}\r\n\r\nexport const ActivityDashboard = ({ activities, selectedActivity, selectActivity, cancelSelectActivity,\r\n    editMode, openForm, closeForm, createOrEdit, deleteActivity }: Props) => {\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                <ActivityList activities={activities} selectActivity={selectActivity} deleteActivity={deleteActivity} />\r\n            </Grid.Column>\r\n\r\n            <Grid.Column width='6'>\r\n                {selectedActivity &&\r\n                    <>\r\n                    <ActivityDetail\r\n                        activity={selectedActivity}\r\n                        cancelSelectActivity={cancelSelectActivity}\r\n                        openForm={openForm}\r\n                    />\r\n\r\n                    </>\r\n                }\r\n                {editMode &&\r\n                    <ActivityForm closeForm={closeForm} activity={selectedActivity} createOrEdit={createOrEdit} />\r\n                }\r\n            </Grid.Column>\r\n\r\n        </Grid>\r\n    )\r\n}","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\dashboard\\ActivityList.tsx",["57"],"﻿import React from 'react';\r\nimport { Button, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/Activity';\r\n\r\n\r\ninterface Props {\r\n    activities: IActivity[];\r\n    selectActivity: (id: string) => void;\r\n    deleteActivity: (id: string) => void;\r\n}\r\n\r\nexport const ActivityList = ({ activities, selectActivity, deleteActivity }: Props) =>  {\r\n\r\n    const DisplayList = () => {\r\n        return (\r\n            <>\r\n                {activities.map(activity =>\r\n\r\n                    <Item key={activity.id}>\r\n                        <Item.Content>\r\n                            <Item.Header as='a'>{activity.title}</Item.Header>\r\n                            <Item.Meta>{activity.date}</Item.Meta>\r\n                            <Item.Description>\r\n                                {activity.description}\r\n                            </Item.Description>\r\n                            <Item.Extra>\r\n                                <Label basic content={activity.category}></Label>\r\n                                <Button floated='right' color='red' onClick={() => deleteActivity(activity.id)}>Delete</Button>\r\n                                <Button floated='right' color='blue' onClick={()=>selectActivity(activity.id)}>View</Button>\r\n                                \r\n                            </Item.Extra>\r\n                        </Item.Content>\r\n                    </Item>\r\n                )}\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Segment>\r\n            <Item.Group divided>\r\n                <DisplayList />\r\n            </Item.Group>\r\n        </Segment>\r\n    )\r\n}","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\details\\ActivityDetail.tsx",["58","59"],"﻿import React from 'react'\r\nimport { Button, Card, Icon, Image } from 'semantic-ui-react'\r\nimport { IActivity } from '../../../app/models/Activity'\r\n\r\ninterface Props {\r\n    activity: IActivity;\r\n    cancelSelectActivity: () => void;\r\n    openForm: (id: string) => void;\r\n}\r\n\r\nexport const ActivityDetail = ({ activity, cancelSelectActivity, openForm }: Props) => {\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Image src={`/assets/categoryImages/${activity}`} wrapped ui={false} />\r\n            <Card.Content>\r\n                <Card.Header>{activity.title}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>{activity.date}</span>\r\n                </Card.Meta>\r\n                <Card.Description>\r\n                    {activity.description}\r\n                </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <Button.Group widths='2'>\r\n                    <Button onClick={() => openForm(activity.id)} basic color='blue' content='Edit' />\r\n                    <Button onClick={cancelSelectActivity} basic color='grey' content='Cancel' />\r\n                </Button.Group>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n}","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\feature\\activities\\form\\ActivityForm.tsx",["60"],"﻿import React, { ChangeEvent, useState } from 'react';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/Activity';\r\n\r\ninterface Props {\r\n    activity: IActivity | undefined;\r\n    closeForm: () => void;\r\n    createOrEdit: (activity: IActivity) => void;\r\n}\r\n\r\nexport const ActivityForm = ({ activity: selectedActivity, closeForm, createOrEdit }: Props) =>{\r\n\r\n    const initialState = selectedActivity ??  {\r\n        id: '',\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        date: '',\r\n        city: '',\r\n        venue: ''\r\n    }\r\n\r\n    const [activity, setActivity] = useState(initialState);\r\n\r\n\r\n    const handleSubmit = () => {\r\n        createOrEdit(activity);\r\n    }\r\n\r\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { name, value } = event.target;\r\n        setActivity({ ...activity, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Form autoComplete='off'>\r\n                <Form.Input placeholder='Title' value={activity.title} name='title' onChange={handleInputChange} />\r\n                <Form.TextArea placeholder='Description' value={activity.description} onChange={handleInputChange} name='description' />\r\n                <Form.Input placeholder='Category' value={activity.category} name='category' onChange={handleInputChange} />\r\n                <Form.Input placeholder='Date' value={activity.date} name='date' onChange={handleInputChange}/>\r\n                <Form.Input placeholder='City' value={activity.city} name='city' onChange={handleInputChange}/>\r\n                <Form.Input placeholder='Venue' value={activity.venue} name='venue' onChange={handleInputChange} />\r\n                <Button onClick={handleSubmit} floated='right' positive type='submit' content='Submit' />\r\n                <Button onClick={closeForm} floated='right' type='button' content='Cancel' />\r\n            </Form>\r\n        </Segment>\r\n    )\r\n}","C:\\Users\\Avi\\source\\repos\\SOCIALINSTA\\API\\ClientApp\\src\\app\\api\\agent.ts",["61"],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":21,"nodeType":"68","messageId":"69","endLine":2,"endColumn":27},{"ruleId":"66","severity":1,"message":"70","line":2,"column":29,"nodeType":"68","messageId":"69","endLine":2,"endColumn":33},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"75"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"76"},{"ruleId":"66","severity":1,"message":"77","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"78"},{"ruleId":"66","severity":1,"message":"70","line":2,"column":16,"nodeType":"68","messageId":"69","endLine":2,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"79"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"80"},{"ruleId":"66","severity":1,"message":"81","line":2,"column":24,"nodeType":"68","messageId":"69","endLine":2,"endColumn":28},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"82"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":1,"nodeType":"73","messageId":"74","fix":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"@typescript-eslint/no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"86","text":"87"},{"range":"88","text":"87"},"'Component' is defined but never used.",{"range":"89","text":"87"},{"range":"90","text":"87"},{"range":"91","text":"87"},"'Icon' is defined but never used.",{"range":"92","text":"87"},{"range":"93","text":"87"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]